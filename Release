-- Загрузка ESP
loadstring(game:HttpGet("https://raw.githubusercontent.com/Oracle228/OracleBot1240149128414908174819074810740812740981749/refs/heads/main/Newbot1571892579082157081750125"))() -- loading esp

local Config = {
    -- Настройки для CameraMode
    CameraFov = 40,
    CameraSmoothness = 1,
    CameraPrediction = 0.03,
    CameraDynamicPrediction = false,
    CameraBasePredictionStrength = 0.03,
    CameraSensitivity = 1,  -- Чувствительность для CameraMode

    -- Настройки для MouseMode
    MouseFov = 80,
    MouseSmoothness = 1,
    MousePrediction = 0.03,
    MouseDynamicPrediction = false,
    MouseBasePredictionStrength = 0.03,
    MouseSensitivity = 1,  -- Чувствительность для MouseMode

    TargetPart = "Head",
    TeamCheck = false,
    WallCheck = false,
    FovColor = Color3.fromRGB(65, 105, 225),
    CloseRangeDistance = 100,
    CloseRangePrediction = false,
    MouseMode = false  -- Режим мыши (включается клавишей U)
}

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera

-- Создаем круг FOV для каждого режима
local fovCircle = Drawing.new("Circle")
fovCircle.Visible = true
fovCircle.Thickness = 0.8
fovCircle.Color = Config.FovColor
fovCircle.Filled = false
fovCircle.Position = Camera.ViewportSize / 2
fovCircle.Radius = Config.CameraFov  -- Начальное значение FOV для CameraMode

local currentTarget = nil

-- Функции для работы с игроками
local function Health(player)
    local character = player.Character
    return character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0
end

local function TeamCheck(player)
    return Config.TeamCheck and player.Team == Players.LocalPlayer.Team
end

local function WallCheck(player)
    if not Config.WallCheck then return true end

    local character = player.Character
    if character and character:FindFirstChild(Config.TargetPart) then
        local targetPart = character[Config.TargetPart]
        local origin = Camera.CFrame.Position
        local direction = (targetPart.Position - origin)
        local raycastParams = RaycastParams.new()
        raycastParams.FilterDescendantsInstances = {Players.LocalPlayer.Character, player.Character}
        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

        local raycastResult = workspace:Raycast(origin, direction.Unit * direction.Magnitude, raycastParams)
        return raycastResult == nil
    end
    return false
end

-- Поиск ближайшей цели с учетом текущего режима FOV
local function Closest()
    local closest, minDist = nil, math.huge
    local screenCenter = Config.MouseMode and UserInputService:GetMouseLocation() or Camera.ViewportSize / 2
    local currentFov = Config.MouseMode and Config.MouseFov or Config.CameraFov

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and Health(player) and not TeamCheck(player) and WallCheck(player) then
            local targetPart = player.Character and player.Character:FindFirstChild(Config.TargetPart)
            if targetPart then
                local screenPos, onScreen = Camera:WorldToViewportPoint(targetPart.Position)
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude

                if onScreen and distance < minDist and distance < currentFov then
                    minDist = distance
                    closest = player
                end
            end
        end
    end

    return closest
end

-- Функция предикшена с учетом режима
local function CalculatePredictionStrength(distance)
    if Config.MouseMode then
        return Config.MouseDynamicPrediction and (Config.MouseBasePredictionStrength * (distance / Config.CloseRangeDistance)) or Config.MousePrediction
    else
        return Config.CameraDynamicPrediction and (Config.CameraBasePredictionStrength * (distance / Config.CloseRangeDistance)) or Config.CameraPrediction
    end
end

local function Predict(position, velocity, distance)
    if Config.CloseRangePrediction and distance <= Config.CloseRangeDistance then
        return position
    else
        local predictionStrength = CalculatePredictionStrength(distance)
        return position + velocity * predictionStrength
    end
end

-- Функция для аимбота, учитывающая текущий режим и чувствительность
local function Aim(target)
    local targetPart = target.Character[Config.TargetPart]
    if targetPart then
        local distance = (targetPart.Position - Camera.CFrame.Position).Magnitude
        local predictedPos = Predict(targetPart.Position, targetPart.Velocity, distance)
        local screenPoint = Camera:WorldToViewportPoint(predictedPos)

        if Config.MouseMode then
            -- Режим мыши: перемещаем мышь к цели с учетом MouseSensitivity
            local mouseLocation = UserInputService:GetMouseLocation()
            mousemoverel(
                (screenPoint.X - mouseLocation.X) * Config.MouseSmoothness * Config.MouseSensitivity,
                (screenPoint.Y - mouseLocation.Y) * Config.MouseSmoothness * Config.MouseSensitivity
            )
        else
            -- Режим камеры: перемещаем камеру к цели с учетом CameraSensitivity
            local direction = (predictedPos - Camera.CFrame.Position).Unit
            Camera.CFrame = Camera.CFrame:Lerp(
                CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + direction),
                Config.CameraSmoothness * Config.CameraSensitivity
            )
        end
    end
end

-- Обновление круга FOV для текущего режима
local function UpdateFov()
    fovCircle.Radius = Config.MouseMode and Config.MouseFov or Config.CameraFov
    fovCircle.Position = Config.MouseMode and UserInputService:GetMouseLocation() or Camera.ViewportSize / 2
end

-- Переключение режима MouseMode
local function ToggleMouseMode()
    Config.MouseMode = not Config.MouseMode
    print("MouseMode is now", Config.MouseMode and "enabled" or "disabled")
end

-- Настройки аимбота, чувствительности и mousemode
UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end

    if input.KeyCode == Enum.KeyCode.U then
        ToggleMouseMode()
    elseif input.KeyCode == Enum.KeyCode.K then
        if Config.MouseMode then
            Config.MousePrediction = Config.MousePrediction + 0.01
            print("MouseMode Prediction:", Config.MousePrediction)
        else
            Config.CameraPrediction = Config.CameraPrediction + 0.01
            print("CameraMode Prediction:", Config.CameraPrediction)
        end
    elseif input.KeyCode == Enum.KeyCode.J then
        if Config.MouseMode then
            Config.MousePrediction = Config.MousePrediction - 0.01
            print("MouseMode Prediction:", Config.MousePrediction)
        else
            Config.CameraPrediction = Config.CameraPrediction - 0.01
            print("CameraMode Prediction:", Config.CameraPrediction)
        end
    elseif input.KeyCode == Enum.KeyCode.L then
        if Config.MouseMode then
            Config.MouseFov = Config.MouseFov + 10
            print("MouseMode FOV:", Config.MouseFov)
        else
            Config.CameraFov = Config.CameraFov + 10
            print("CameraMode FOV:", Config.CameraFov)
        end
    elseif input.KeyCode == Enum.KeyCode.H then
        if Config.MouseMode then
            Config.MouseFov = Config.MouseFov - 10
            print("MouseMode FOV:", Config.MouseFov)
        else
            Config.CameraFov = Config.CameraFov - 10
            print("CameraMode FOV:", Config.CameraFov)
        end
    elseif input.KeyCode == Enum.KeyCode.X then
        Config.CloseRangePrediction = not Config.CloseRangePrediction
        print("CloseRangePrediction is now", Config.CloseRangePrediction and "enabled" or "disabled")
    elseif input.KeyCode == Enum.KeyCode.Z then
        if Config.MouseMode then
            Config.MouseDynamicPrediction = not Config.MouseDynamicPrediction
            print("Mouse DynamicPrediction is now", Config.MouseDynamicPrediction and "enabled" or "disabled")
        else
            Config.CameraDynamicPrediction = not Config.CameraDynamicPrediction
            print("Camera DynamicPrediction is now", Config.CameraDynamicPrediction and "enabled" or "disabled")
        end
    elseif input.KeyCode == Enum.KeyCode.N then
        if Config.MouseMode then
            Config.MouseBasePredictionStrength = Config.MouseBasePredictionStrength + 0.01
            print("MouseMode Base Prediction Strength:", Config.MouseBasePredictionStrength)
        else
            Config.CameraBasePredictionStrength = Config.CameraBasePredictionStrength + 0.01
            print("CameraMode Base Prediction Strength:", Config.CameraBasePredictionStrength)
        end
    elseif input.KeyCode == Enum.KeyCode.B then
        if Config.MouseMode then
            Config.MouseBasePredictionStrength = Config.MouseBasePredictionStrength - 0.01
            print("MouseMode Base Prediction Strength:", Config.MouseBasePredictionStrength)
        else
            Config.CameraBasePredictionStrength = Config.CameraBasePredictionStrength - 0.01
            print("CameraMode Base Prediction Strength:", Config.CameraBasePredictionStrength)
        end
    elseif input.KeyCode == Enum.KeyCode.T then
        if Config.MouseMode then
            Config.MouseSensitivity = Config.MouseSensitivity + 0.1
            print("MouseMode Sensitivity:", Config.MouseSensitivity)
        else
            Config.CameraSensitivity = Config.CameraSensitivity + 0.1
            print("CameraMode Sensitivity:", Config.CameraSensitivity)
        end
    elseif input.KeyCode == Enum.KeyCode.Y then
        if Config.MouseMode then
            Config.MouseSensitivity = Config.MouseSensitivity - 0.1
            print("MouseMode Sensitivity:", Config.MouseSensitivity)
        else
            Config.CameraSensitivity = Config.CameraSensitivity - 0.1
            print("CameraMode Sensitivity:", Config.CameraSensitivity)
        end
    end
end)

-- Основной цикл
RunService.RenderStepped:Connect(function()
    UpdateFov()
    
    if UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
        if not currentTarget or not currentTarget.Character or not currentTarget.Character:FindFirstChild(Config.TargetPart) then
            currentTarget = Closest()
        end

        if currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild(Config.TargetPart) then
            Aim(currentTarget)
        end
    else
        currentTarget = nil
    end
end)

-- Окончательные подсказки
print("Fov+L, Fov-H;")
print("Pred+K, Pred-J")
print("DynPred+N, DynPred-B")
print("CloseRange: X")
print("ClosePred: Z;")
print("Sens+T, Sens-Y")
print("MouseMode toggle: U")
