-- Загрузка ESP и нклип тут же
loadstring(game:HttpGet("https://raw.githubusercontent.com/Oracle228/OracleBot1240149128414908174819074810740812740981749/refs/heads/main/Newbot1571892579082157081750125"))() -- loading esp
loadstring(game:HttpGet("https://raw.githubusercontent.com/Oracle228/OracleBot1240149128414908174819074810740812740981749/refs/heads/main/NclipBot12313146190561905619050918562109856109852"))() -- noclip

local Config = {
    -- Настройки для CameraMode
    CameraFov = 40,
    CameraSmoothness = 1,
    CameraDynamicPrediction = false,
    CameraBasePredictionStrength = 0.03,
    CameraSensitivity = 1,

    -- Настройки для MouseMode
    MouseFov = 80,
    MouseSmoothness = 1,
    MouseDynamicPrediction = false,
    MouseBasePredictionStrength = 0.03,
    MouseSensitivity = 1,

    TargetPart = "Head",
    TeamCheck = false,
    WallCheck = false,
    FovColor = Color3.fromRGB(65, 105, 225),
    MouseMode = false,
    AimBotEnabled = true  -- Добавлено: Переключение аимбота
}

local SilentAim = {
    Enabled = false,
    TargetPart = "HumanoidRootPart",
    Methods = {"Raycast", "FindPartOnRay", "FindPartOnRayWithWhitelist", "FindPartOnRayWithIgnoreList", "Mouse.Hit/Target"},
    MethodIndex = 1,
    HitChance = 100,
    VisibleCheck = false
}

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera


local fovCircle = Drawing.new("Circle")
fovCircle.Visible = true
fovCircle.Thickness = 0.8
fovCircle.Color = Config.FovColor
fovCircle.Filled = false
fovCircle.Position = Camera.ViewportSize / 2
fovCircle.Radius = Config.CameraFov  -- Начальное значение FOV для CameraMode

local currentTarget = nil
local bindingsEnabled = true -- Переменная для отслеживания состояния биндов


local function Health(player)
    local character = player.Character
    return character and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0
end

local function TeamCheck(player)
    return Config.TeamCheck and player.Team == Players.LocalPlayer.Team
end

local function WallCheck(player)
    if not Config.WallCheck then return true end
    local character = player.Character
    if character and character:FindFirstChild(Config.TargetPart) then
        local targetPart = character[Config.TargetPart]
        local origin = Camera.CFrame.Position
        local direction = (targetPart.Position - origin)
        local raycastParams = RaycastParams.new()
        raycastParams.FilterDescendantsInstances = {Players.LocalPlayer.Character, player.Character}
        raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

        local raycastResult = workspace:Raycast(origin, direction.Unit * direction.Magnitude, raycastParams)
        return raycastResult == nil
    end
    return false
end


local function GetClosestPlayer()
    local closestPlayer = nil
    local minDist = math.huge
    local screenCenter = Camera.ViewportSize / 2
    local currentFov = Config.MouseMode and Config.MouseFov or Config.CameraFov

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and Health(player) and not TeamCheck(player) and WallCheck(player) then
            local targetPart = player.Character and player.Character:FindFirstChild(SilentAim.TargetPart)
            if targetPart then
                local screenPos, onScreen = Camera:WorldToViewportPoint(targetPart.Position)
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - screenCenter).Magnitude

                if onScreen and distance < minDist and distance < currentFov then
                    minDist = distance
                    closestPlayer = player
                end
            end
        end
    end
    return closestPlayer
end


local function SilentAimMethod()
    if SilentAim.Enabled then
        local targetPlayer = GetClosestPlayer()
        if targetPlayer and math.random(0, 100) <= SilentAim.HitChance then
            return targetPlayer.Character[SilentAim.TargetPart].Position
        end
    end
    return nil
end


local function Aim(target)
    local targetPart = target.Character[Config.TargetPart]
    if targetPart then
        local predictedPos = targetPart.Position + targetPart.Velocity * Config.CameraBasePredictionStrength
        local screenPoint = Camera:WorldToViewportPoint(predictedPos)

        if Config.MouseMode then
            -- Режим мыши: перемещаем мышь к цели с учетом MouseSensitivity
            local mouseLocation = UserInputService:GetMouseLocation()
            mousemoverel(
                (screenPoint.X - mouseLocation.X) * Config.MouseSmoothness * Config.MouseSensitivity,
                (screenPoint.Y - mouseLocation.Y) * Config.MouseSmoothness * Config.MouseSensitivity
            )
        else
            -- Режим камеры: перемещаем камеру к цели с учетом CameraSensitivity
            local direction = (predictedPos - Camera.CFrame.Position).Unit
            Camera.CFrame = Camera.CFrame:Lerp(
                CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + direction),
                Config.CameraSmoothness * Config.CameraSensitivity
            )
        end
    end
end


local function UpdateFov()
    fovCircle.Radius = Config.MouseMode and Config.MouseFov or Config.CameraFov
    fovCircle.Position = Config.MouseMode and UserInputService:GetMouseLocation() or Camera.ViewportSize / 2
end

local function ToggleMouseMode()
    Config.MouseMode = not Config.MouseMode
    print("MouseMode is now", Config.MouseMode and "enabled" or "disabled")
end

local function ToggleBindings()
    bindingsEnabled = not bindingsEnabled
    print("Bindings are now", bindingsEnabled and "enabled" or "disabled")
end


local function ToggleSilentAimMethod()
    SilentAim.MethodIndex = SilentAim.MethodIndex % #SilentAim.Methods + 1
    print("Silent Aim Method is now:", SilentAim.Methods[SilentAim.MethodIndex])
end


local function ToggleSilentAim()
    SilentAim.Enabled = not SilentAim.Enabled
    if SilentAim.Enabled then
        Config.AimBotEnabled = false  -- Отключаем основной аимбот при включении Silent Aim
    end
    print("Silent Aim is now", SilentAim.Enabled and "enabled" or "disabled")
end


local function ToggleAimBot()
    Config.AimBotEnabled = not Config.AimBotEnabled
    print("AimBot is now", Config.AimBotEnabled and "enabled" or "disabled")
end


UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end

   
    if input.KeyCode == Enum.KeyCode.P then
        ToggleBindings()
        return
    end

   
    if not bindingsEnabled then return end

    if input.KeyCode == Enum.KeyCode.U then
        ToggleMouseMode()
    elseif input.KeyCode == Enum.KeyCode.L then
        if Config.MouseMode then
            Config.MouseFov = Config.MouseFov + 10
            print("MouseMode FOV:", Config.MouseFov)
        else
            Config.CameraFov = Config.CameraFov + 10
            print("CameraMode FOV:", Config.CameraFov)
        end
    elseif input.KeyCode == Enum.KeyCode.K then
        if Config.MouseMode then
            Config.MouseFov = Config.MouseFov - 10
            print("MouseMode FOV:", Config.MouseFov)
        else
            Config.CameraFov = Config.CameraFov - 10
            print("CameraMode FOV:", Config.CameraFov)
        end
    elseif input.KeyCode == Enum.KeyCode.V then
        ToggleSilentAim()
    elseif input.KeyCode == Enum.KeyCode.B then
        ToggleSilentAimMethod()
    elseif input.KeyCode == Enum.KeyCode.X then
        if Config.MouseMode then
            Config.MouseDynamicPrediction = not Config.MouseDynamicPrediction
            print("MouseMode Dynamic Prediction:", Config.MouseDynamicPrediction and "enabled" or "disabled")
        else
            Config.CameraDynamicPrediction = not Config.CameraDynamicPrediction
            print("CameraMode Dynamic Prediction:", Config.CameraDynamicPrediction and "enabled" or "disabled")
        end
    elseif input.KeyCode == Enum.KeyCode.H then
        if Config.MouseMode then
            Config.MouseBasePredictionStrength = Config.MouseBasePredictionStrength - 0.01
            print("MouseMode Base Prediction Strength:", Config.MouseBasePredictionStrength)
        else
            Config.CameraBasePredictionStrength = Config.CameraBasePredictionStrength - 0.01
            print("CameraMode Base Prediction Strength:", Config.CameraBasePredictionStrength)
        end
    elseif input.KeyCode == Enum.KeyCode.J then
        if Config.MouseMode then
            Config.MouseBasePredictionStrength = Config.MouseBasePredictionStrength + 0.01
            print("MouseMode Base Prediction Strength:", Config.MouseBasePredictionStrength)
        else
            Config.CameraBasePredictionStrength = Config.CameraBasePredictionStrength + 0.01
            print("CameraMode Base Prediction Strength:", Config.CameraBasePredictionStrength)
        end
    elseif input.KeyCode == Enum.KeyCode.Z then
        ToggleAimBot()
    elseif input.KeyCode == Enum.KeyCode.T then
        if Config.MouseMode then
            Config.MouseSensitivity = Config.MouseSensitivity + 0.1
            print("MouseMode Sensitivity:", Config.MouseSensitivity)
        else
            Config.CameraSensitivity = Config.CameraSensitivity + 0.1
            print("CameraMode Sensitivity:", Config.CameraSensitivity)
        end
    elseif input.KeyCode == Enum.KeyCode.Y then
        if Config.MouseMode then
            Config.MouseSensitivity = Config.MouseSensitivity - 0.1
            print("MouseMode Sensitivity:", Config.MouseSensitivity)
        else
            Config.CameraSensitivity = Config.CameraSensitivity - 0.1
            print("CameraMode Sensitivity:", Config.CameraSensitivity)
        end
    end
end)


RunService.RenderStepped:Connect(function()
    UpdateFov()
    
    if Config.AimBotEnabled and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
        if not currentTarget or not currentTarget.Character or not currentTarget.Character:FindFirstChild(Config.TargetPart) then
            currentTarget = GetClosestPlayer()
        end

        if currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild(Config.TargetPart) then
            Aim(currentTarget)
        end
    else
        currentTarget = nil
    end
end)

-- Подсказки по биндам
print("=================================================================")
print("Fov+L, Fov-K;")
print("Dynamic Prediction+H, Dynamic Prediction-J;")
print("Sens+T, Sens-Y")
print("MouseMode toggle: U")
print("Noclip toggle: G")
print("Toggle bindings: P")
print("Silent Aim toggle: V (Silent Aim Turning off AimBot Automaticly)")
print("Silent Aim Method cycle: B")
print("Toggle AimBot: Z")
print("Esp: C")
print("Toggle Prediction: X")
print("=================================================================")
