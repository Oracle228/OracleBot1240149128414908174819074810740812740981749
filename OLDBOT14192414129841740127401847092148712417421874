local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local ESPEnabled = false
local ESPParts = {}

local function CreateESP(player)
    local esp = Instance.new("Folder")
    esp.Name = player.Name .. "_ESP"
    
    -- Billboard для информации об игроке
    local nameTag = Instance.new("BillboardGui")
    nameTag.Name = "ESP_NameTag"
    nameTag.Size = UDim2.new(0, 200, 0, 75)
    nameTag.AlwaysOnTop = true
    nameTag.StudsOffset = Vector3.new(0, -0.4, 0)  -- Начальное смещение немного выше под игроком
    nameTag.Parent = esp

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Name = "NameLabel"
    nameLabel.Size = UDim2.new(1, 0, 0, 20)
    nameLabel.BackgroundTransparency = 1
    nameLabel.TextColor3 = Color3.new(0.25, 1, 1)
    nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    nameLabel.TextStrokeTransparency = 0
    nameLabel.Font = Enum.Font.Arcade
    nameLabel.TextScaled = false
    nameLabel.TextSize = 14
    nameLabel.Parent = nameTag

    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Name = "DistanceLabel"
    distanceLabel.Size = UDim2.new(1, 0, 0, 20)
    distanceLabel.Position = UDim2.new(0, 0, 0, 20)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.TextColor3 = Color3.new(0.25, 1, 1)
    distanceLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    distanceLabel.TextStrokeTransparency = 0
    distanceLabel.Font = Enum.Font.Arcade
    distanceLabel.TextScaled = false
    distanceLabel.TextSize = 14
    distanceLabel.Parent = nameTag

    local healthLabel = Instance.new("TextLabel")
    healthLabel.Name = "HealthLabel"
    healthLabel.Size = UDim2.new(1, 0, 0, 20)
    healthLabel.Position = UDim2.new(0, 0, 0, 40)
    healthLabel.BackgroundTransparency = 1
    healthLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
    healthLabel.TextStrokeTransparency = 0
    healthLabel.Font = Enum.Font.Arcade
    healthLabel.TextScaled = false
    healthLabel.TextSize = 14
    healthLabel.Parent = nameTag

    -- Создаем линию для трейсера
    local tracerLine = Instance.new("LineHandleAdornment")
    tracerLine.Name = "TracerLine"
    tracerLine.Thickness = 2
    tracerLine.Color3 = Color3.new(0, 1, 1)  -- RGB цвет трейсера
    tracerLine.Transparency = 0.25
    tracerLine.Adornee = workspace  -- Закрепляем к workspace
    tracerLine.Parent = esp

    esp.Parent = Camera

    return esp
end

local function UpdateESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local esp = ESPParts[player]
            if not esp then
                esp = CreateESP(player)
                ESPParts[player] = esp
            end

            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") then
                local humanoidRootPart = player.Character.HumanoidRootPart
                local humanoid = player.Character.Humanoid
                local head = player.Character:FindFirstChild("Head")

                esp.Parent = ESPEnabled and Camera or nil

                if ESPEnabled then
                    -- Расстояние между игроками
                    local distance = (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")) and 
                                     (LocalPlayer.Character.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude or 0

                    esp.ESP_NameTag.Adornee = head
                    esp.ESP_NameTag.NameLabel.Text = player.Name
                    esp.ESP_NameTag.DistanceLabel.Text = string.format("%.1f studs", distance)
                    esp.ESP_NameTag.HealthLabel.Text = string.format("Health: %.0f", humanoid.Health)

                    -- Обновляем смещение вниз в зависимости от расстояния
                    local offsetY = -10 - (distance * 0.05)  -- Начальное значение -0.4 и немного уходит ниже с увеличением расстояния
                    esp.ESP_NameTag.StudsOffset = Vector3.new(0, offsetY, 0)

                    -- Обновление цвета здоровья
                    local healthPercentage = humanoid.Health / humanoid.MaxHealth
                    if healthPercentage > 0.5 then
                        esp.ESP_NameTag.HealthLabel.TextColor3 = Color3.new(0, 0.5 + 0.5 * (1 - healthPercentage), 1)
                    else
                        esp.ESP_NameTag.HealthLabel.TextColor3 = Color3.new(1, 0, 0)
                    end

                    -- Обновляем позицию трейсера
                    local tracerLine = esp:FindFirstChild("TracerLine")
                    if tracerLine then
                        local screenPoint = Camera:WorldToViewportPoint(humanoidRootPart.Position)
                        tracerLine.CFrame = CFrame.new(
                            Camera.CFrame.Position + Vector3.new(0, -Camera.ViewportSize.Y/2, 0), -- начальная точка трейсера
                            humanoidRootPart.Position -- конечная точка трейсера
                        )
                    end
                end
            end
        end
    end
end

local function RemoveESP(player)
    local esp = ESPParts[player]
    if esp then
        esp:Destroy()
        ESPParts[player] = nil
    end
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        RemoveESP(player)
        if ESPEnabled then
            ESPParts[player] = CreateESP(player)
        end
    end)
end)

Players.PlayerRemoving:Connect(RemoveESP)

RunService.RenderStepped:Connect(function()
    UpdateESP()
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.C then
        ESPEnabled = not ESPEnabled
        print("ESP " .. (ESPEnabled and "Enabled" or "Disabled"))
    end
end)
